#! /usr/bin/env ruby

# Script for finding outdated elisp bytecode. Calls mtime on both source and
# byte-compiled file, complains when bytecode is older then corresponding
# source file

require 'pathname'

class Pathname
  def older_then(other)
    mtime < other.mtime
  end
end

HOME = Pathname.new(Dir.home)

outdated = Pathname.glob("#{HOME}/.emacs.d/**/*.el").select do |src|
  bytecode = Pathname.new "#{src}c"
  bytecode.exist? and bytecode.older_then src
end.map { |p| p.relative_path_from HOME }

puts outdated.empty? ? "All bytecode is up-to-date" : outdated
